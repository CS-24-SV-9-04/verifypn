/* Copyright (C) 2021  Nikolaj J. Ulrik <nikolaj@njulrik.dk>,
 *                     Simon M. Virenfeldt <simon@simwir.dk>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef VERIFYPN_PAIRPRODUCTSTATESET_H
#define VERIFYPN_PAIRPRODUCTSTATESET_H


class PairProductStateSet {
    using stateid_t = struct {
        size_t marking;
        size_t buchi;
    };


    /**
 * Insert a product state into the state set.
 * @param state the product state to insert.
 * @return pair of [success, ID]
 */
    result_t insertProductState(const LTL::Structures::ProductState &state)
    {

    }

    /**
 * Retrieve a product state from the state set.
 * @param id Composite state ID as previously generated by this.
 * @param state Output parameter to write product state to.
 * @return true if the state was successfully retrieved, false otherwise.
 */
    bool retrieveProductState(LTL::Structures::ProductState &state, stateid_t id)
    {

    }
};


#endif //VERIFYPN_PAIRPRODUCTSTATESET_H
