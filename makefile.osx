#Programs for processing
LEX				= flex
YACC			= bison
CC				= gcc
RM				= rm
FIND			= find
GREP			= grep
SED				= sed
MKDIR			= mkdir
WGET			= curl -L -O
CP				= cp
TAR				= tar

#Compiler and linker flags
CFLAGS			= -m32 -O3 -I.
LDFLAGS			= -L./lpsolve -O3 -lliblpsolve55.dylib -ldl

#Target
TARGET			= verifypn

#Source files
FLEX_SOURCES	= $(shell $(FIND) * -name "*.l")
BISON_SOURCES	= $(shell $(FIND) * -name "*.y")
SOURCES			= $(shell $(FIND) * -name "*.cpp" | $(GREP) -v ".\\(parser\\|lexer\\).cpp")		\
				  $(BISON_SOURCES:.y=.parser.cpp)												\
				  $(FLEX_SOURCES:.l=.lexer.cpp)

#Intermediate files
OBJECTS			= $(SOURCES:.cpp=.o)

#Default target
all: $(TARGET)

#Rules for updating lexer and parser
%.lexer.cpp: %.l
	@echo "You must run flex on Linux using the generate target."
%.parser.cpp: %.y
	@echo "You must run bison on Linux using the generate target."
generate: $(BISON_SOURCES:.y=.parser.cpp) $(FLEX_SOURCES:.l=.lexer.cpp)

#Build rules
%.o: %.cpp
	$(CC) -c $(CFLAGS) -o $@ $<
$(TARGET): lpsolve $(SOURCES:.cpp=.o)
	$(CC) $(SOURCES:.cpp=.o) $(LDFLAGS) -o $@
	$(CP) lpsolve/liblpsolve55.dylib liblpsolve55.dylib
lpsolve:
	$(WGET) http://sourceforge.net/projects/lpsolve/files/lpsolve/5.5.2.0/lp_solve_5.5.2.0_dev_osx32.tar.gz/download
	$(MKDIR) lpsolve
	$(TAR) -xzf download -C lpsolve
	$(RM) download

#Clean rule
clean:
	$(RM) -rf lpsolve
	$(RM) -f $(OBJECTS) $(TARGET)

#Check the build
check: $(TARGET)
	@for f in Tests/*.xml; do																	\
		echo "Testing $$f:";																	\
		./$(TARGET) -m 256 $$f $$f.q;															\
		if [ `echo $$f | $(SED) -e "s/.*-\([0-9]\)\.xml/\1/"` -ne $$? ]; then 					\
			echo " --- Test Failed!"; 															\
		else																					\
			echo " +++ Test Succeeded"; 														\
		fi 																						\
	done 

.PHONY: all generate clean check
