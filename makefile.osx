#Programs for processing
LEX				= flex
YACC			= bison
CC				= gcc
RM				= rm
FIND			= find
GREP			= grep
SED				= sed
MKDIR			= mkdir
WGET			= curl -L -O
CP				= cp
TAR				= tar

#Compiler and linker flags
CFLAGS			= -O3 -I.
LDFLAGS			= -L./lpsolve -static -O3 -llpsolve55 -lcolamd -ldl
#I don't know if -lcolamd and -ldl is necessary, also -lm might be needed
#if not readily available in path or by download some of these might be disabled by:
#CFLAS		   += -DLoadInverseLib=0 -DLoadLanguageLib=0
#We can also try to link against the dynamic library, just remember to copy it out,
#and remove the -static flag, maybe also hardcode the link flag to the liblpsolve.dylib

#Target
TARGET			= VerifyPN

#Source files
FLEX_SOURCES	= $(shell $(FIND) * -name "*.l")
BISON_SOURCES	= $(shell $(FIND) * -name "*.y")
SOURCES			= $(shell $(FIND) * -name "*.cpp" | $(GREP) -v ".\\(parser\\|lexer\\).cpp")	\
				  $(BISON_SOURCES:.y=.parser.cpp)												\
				  $(FLEX_SOURCES:.l=.lexer.cpp)

#Intermediate files
OBJECTS			= $(SOURCES:.cpp=.o)															\
				  $(FLEX_SOURCES:.l=.lexer.cpp)													\
				  $(BISON_SOURCES:.y=.parser.cpp)												\
				  $(BISON_SOURCES:.y=.parser.hpp)

#Build rules
%.lexer.cpp: %.l
	$(LEX) -o $@ $<
%.parser.cpp: %.y
	$(YACC) -d -o $@ $<
%.o: %.cpp
	$(CC) -c $(CFLAGS) -o $@ $<
$(TARGET): lpsolve $(SOURCES:.cpp=.o)
	$(CC) $(SOURCES:.cpp=.o) $(LDFLAGS) -o $@
lpsolve:
#	$(WGET) http://sourceforge.net/projects/lpsolve/files/lpsolve/5.5.2.0/lp_solve_5.5.2.0_dev_osx32.tar.gz/download
	$(MKDIR) lpsolve
	$(TAR) -xzf download -C lpsolve
#	$(RM) download

all: $(TARGET)
clean:
	$(RM) -rf lpsolve
	$(RM) -f $(OBJECTS) $(TARGET)

#Check the build
check: $(TARGET)
	@for f in Tests/*.xml; do																	\
		echo "Testing $$f:";																	\
		./$(TARGET) -m 256 $$f $$f.q;															\
		if [ `echo $$f | $(SED) -e "s/.*-\([0-9]\)\.xml/\1/"` -ne $$? ]; then 					\
			echo " --- Test Failed!"; 															\
		else																					\
			echo " +++ Test Succeeded"; 														\
		fi 																						\
	done 

.PHONY: all clean check
